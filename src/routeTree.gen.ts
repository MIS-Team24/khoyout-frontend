/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const OtpLazyImport = createFileRoute('/otp')()
const NotificationsLazyImport = createFileRoute('/notifications')()
const InspirationLazyImport = createFileRoute('/inspiration')()
const ImagesLazyImport = createFileRoute('/images')()
const HomeLazyImport = createFileRoute('/home')()
const ForgetPasswordLazyImport = createFileRoute('/forget-password')()
const DesignersLazyImport = createFileRoute('/designers')()
const DesignerProfileLazyImport = createFileRoute('/designer-profile')()
const ContactLazyImport = createFileRoute('/contact')()
const ClientPageLazyImport = createFileRoute('/client-page')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const OtpLazyRoute = OtpLazyImport.update({
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/otp.lazy').then((d) => d.Route))

const NotificationsLazyRoute = NotificationsLazyImport.update({
  path: '/notifications',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notifications.lazy').then((d) => d.Route))

const InspirationLazyRoute = InspirationLazyImport.update({
  path: '/inspiration',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inspiration.lazy').then((d) => d.Route))

const ImagesLazyRoute = ImagesLazyImport.update({
  path: '/images',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/images.lazy').then((d) => d.Route))

const HomeLazyRoute = HomeLazyImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home.lazy').then((d) => d.Route))

const ForgetPasswordLazyRoute = ForgetPasswordLazyImport.update({
  path: '/forget-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forget-password.lazy').then((d) => d.Route),
)

const DesignersLazyRoute = DesignersLazyImport.update({
  path: '/designers',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/designers.lazy').then((d) => d.Route))

const DesignerProfileLazyRoute = DesignerProfileLazyImport.update({
  path: '/designer-profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/designer-profile.lazy').then((d) => d.Route),
)

const ContactLazyRoute = ContactLazyImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const ClientPageLazyRoute = ClientPageLazyImport.update({
  path: '/client-page',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/client-page.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/client-page': {
      preLoaderRoute: typeof ClientPageLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/designer-profile': {
      preLoaderRoute: typeof DesignerProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/designers': {
      preLoaderRoute: typeof DesignersLazyImport
      parentRoute: typeof rootRoute
    }
    '/forget-password': {
      preLoaderRoute: typeof ForgetPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      preLoaderRoute: typeof HomeLazyImport
      parentRoute: typeof rootRoute
    }
    '/images': {
      preLoaderRoute: typeof ImagesLazyImport
      parentRoute: typeof rootRoute
    }
    '/inspiration': {
      preLoaderRoute: typeof InspirationLazyImport
      parentRoute: typeof rootRoute
    }
    '/notifications': {
      preLoaderRoute: typeof NotificationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/otp': {
      preLoaderRoute: typeof OtpLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ClientPageLazyRoute,
  ContactLazyRoute,
  DesignerProfileLazyRoute,
  DesignersLazyRoute,
  ForgetPasswordLazyRoute,
  HomeLazyRoute,
  ImagesLazyRoute,
  InspirationLazyRoute,
  NotificationsLazyRoute,
  OtpLazyRoute,
  RegisterLazyRoute,
])

/* prettier-ignore-end */
