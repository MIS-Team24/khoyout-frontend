/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordImport } from './routes/reset-password'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const RegisterLazyImport = createFileRoute('/register')()
const OtpLazyImport = createFileRoute('/otp')()
const NotificationsLazyImport = createFileRoute('/notifications')()
const MyProfileLazyImport = createFileRoute('/my-profile')()
const LoginLazyImport = createFileRoute('/login')()
const InspirationLazyImport = createFileRoute('/inspiration')()
const HomeLazyImport = createFileRoute('/home')()
const ForgetPasswordLazyImport = createFileRoute('/forget-password')()
const DesignersLazyImport = createFileRoute('/designers')()
const DeleteAccountLazyImport = createFileRoute('/delete-account')()
const ContactLazyImport = createFileRoute('/contact')()
const ClientPageLazyImport = createFileRoute('/client-page')()
const IndexLazyImport = createFileRoute('/')()
const SubscriptionIndexLazyImport = createFileRoute('/subscription/')()
const SubscriptionStandardLazyImport = createFileRoute(
  '/subscription/standard',
)()
const SubscriptionPremiumLazyImport = createFileRoute('/subscription/premium')()
const GalleryVideosLazyImport = createFileRoute('/gallery/videos')()
const GalleryImagesLazyImport = createFileRoute('/gallery/images')()
const DesignerIdDesignerLazyImport = createFileRoute('/$designerId/designer')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const OtpLazyRoute = OtpLazyImport.update({
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/otp.lazy').then((d) => d.Route))

const NotificationsLazyRoute = NotificationsLazyImport.update({
  path: '/notifications',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notifications.lazy').then((d) => d.Route))

const MyProfileLazyRoute = MyProfileLazyImport.update({
  path: '/my-profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/my-profile.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const InspirationLazyRoute = InspirationLazyImport.update({
  path: '/inspiration',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inspiration.lazy').then((d) => d.Route))

const HomeLazyRoute = HomeLazyImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home.lazy').then((d) => d.Route))

const ForgetPasswordLazyRoute = ForgetPasswordLazyImport.update({
  path: '/forget-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forget-password.lazy').then((d) => d.Route),
)

const DesignersLazyRoute = DesignersLazyImport.update({
  path: '/designers',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/designers.lazy').then((d) => d.Route))

const DeleteAccountLazyRoute = DeleteAccountLazyImport.update({
  path: '/delete-account',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/delete-account.lazy').then((d) => d.Route),
)

const ContactLazyRoute = ContactLazyImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const ClientPageLazyRoute = ClientPageLazyImport.update({
  path: '/client-page',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/client-page.lazy').then((d) => d.Route))

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SubscriptionIndexLazyRoute = SubscriptionIndexLazyImport.update({
  path: '/subscription/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/subscription/index.lazy').then((d) => d.Route),
)

const SubscriptionStandardLazyRoute = SubscriptionStandardLazyImport.update({
  path: '/subscription/standard',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/subscription/standard.lazy').then((d) => d.Route),
)

const SubscriptionPremiumLazyRoute = SubscriptionPremiumLazyImport.update({
  path: '/subscription/premium',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/subscription/premium.lazy').then((d) => d.Route),
)

const GalleryVideosLazyRoute = GalleryVideosLazyImport.update({
  path: '/gallery/videos',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/gallery/videos.lazy').then((d) => d.Route),
)

const GalleryImagesLazyRoute = GalleryImagesLazyImport.update({
  path: '/gallery/images',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/gallery/images.lazy').then((d) => d.Route),
)

const DesignerIdDesignerLazyRoute = DesignerIdDesignerLazyImport.update({
  path: '/$designerId/designer',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/$designerId/designer.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/client-page': {
      preLoaderRoute: typeof ClientPageLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/delete-account': {
      preLoaderRoute: typeof DeleteAccountLazyImport
      parentRoute: typeof rootRoute
    }
    '/designers': {
      preLoaderRoute: typeof DesignersLazyImport
      parentRoute: typeof rootRoute
    }
    '/forget-password': {
      preLoaderRoute: typeof ForgetPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      preLoaderRoute: typeof HomeLazyImport
      parentRoute: typeof rootRoute
    }
    '/inspiration': {
      preLoaderRoute: typeof InspirationLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/my-profile': {
      preLoaderRoute: typeof MyProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/notifications': {
      preLoaderRoute: typeof NotificationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/otp': {
      preLoaderRoute: typeof OtpLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/$designerId/designer': {
      preLoaderRoute: typeof DesignerIdDesignerLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery/images': {
      preLoaderRoute: typeof GalleryImagesLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery/videos': {
      preLoaderRoute: typeof GalleryVideosLazyImport
      parentRoute: typeof rootRoute
    }
    '/subscription/premium': {
      preLoaderRoute: typeof SubscriptionPremiumLazyImport
      parentRoute: typeof rootRoute
    }
    '/subscription/standard': {
      preLoaderRoute: typeof SubscriptionStandardLazyImport
      parentRoute: typeof rootRoute
    }
    '/subscription/': {
      preLoaderRoute: typeof SubscriptionIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ResetPasswordRoute,
  ClientPageLazyRoute,
  ContactLazyRoute,
  DeleteAccountLazyRoute,
  DesignersLazyRoute,
  ForgetPasswordLazyRoute,
  HomeLazyRoute,
  InspirationLazyRoute,
  LoginLazyRoute,
  MyProfileLazyRoute,
  NotificationsLazyRoute,
  OtpLazyRoute,
  RegisterLazyRoute,
  SettingsLazyRoute,
  DesignerIdDesignerLazyRoute,
  GalleryImagesLazyRoute,
  GalleryVideosLazyRoute,
  SubscriptionPremiumLazyRoute,
  SubscriptionStandardLazyRoute,
  SubscriptionIndexLazyRoute,
])

/* prettier-ignore-end */
